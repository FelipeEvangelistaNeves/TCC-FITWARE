---------PRODUTOS------------
create table produtos(
	pd_id serial primary key,
	pd_nome varchar(120) not null,
	pd_valor int not null,
	pd_descricao varchar(200)
);

----------DESAFIOS------------
create table desafios(
	de_id serial primary key,
	de_nome varchar(80) not null,
	de_descricao varchar(150),
	de_pontos int not null,
	de_desafio varchar(60) not null,
	de_progresso int not null,
	de_start timestamp not null,
	de_end timestamp not null
);

---------PAGAMENTOS----------
create table pagamentos(
	pa_id serial primary key,
	pa_aluno_id int not null,
	pa_valor decimal(6,2) not null,
	pa_metodo char(1) not null,
	pa_status varchar(20) not null,
	pa_data date not null
);

---------ALUNOS--------------
create table alunos(
	al_id serial primary key,
	al_nome varchar(120) not null,
	al_email varchar(120) not null,
	al_senha varchar(60) not null,
	al_cpf varchar(11) not null,
	al_telefone varchar(11),
	al_dtnasc date not null,
	al_pontos int not null
);

---------MODALIDADES-----------
create table modalidades(
	mo_id serial primary key, 
	mo_nome varchar(30) not null,
	mo_descricao varchar(200) 
);

---------HORARIOS--------------
create table horarios(
	hor_id serial primary key, 
	hor_start time not null,
	hor_end time not null,
	hor_dia varchar(7) not null
);

---------TURMAS----------------
create table turmas(
	tu_id serial primary key, 
	tu_nome varchar(50) not null,
	tu_prof_id int not null, 
	tu_mod_id int not null,
	tu_hor_id int not null
);

---------ALUNOS_TURMAS-----------
CREATE TABLE alunos_turmas (
    al_tu_id INT REFERENCES alunos(al_id) ON DELETE CASCADE,
    tu_al_id INT REFERENCES turmas(tu_id) ON DELETE CASCADE,
    PRIMARY KEY (al_tu_id, tu_al_id)
);

---------FUNCIONARIOS----------
create table funcionarios(
	fu_id serial primary key, 
	fu_nome varchar(120) not null,
	fu_email varchar(120) not null,
	fu_senha varchar(60) not null,
	fu_cpf varchar(11) not null,
	fu_telefone varchar(11) not null,
	fu_dtnasc date not null,
	fu_cargo varchar(50) not null,
	fu_cref varchar(13)
);	

---------TREINOS--------------
create table treinos(
	tr_id serial primary key,
	tr_prof_id int not null, 
	tr_nome varchar(80) not null,
	tr_descricao varchar(150),
	tr_repeticoes varchar(4) 
);

---------EXERCICIOS-----------
create table exercícios(
	ex_id serial primary key,
	ex_nome varchar(80) not null,
	ex_instrucao varchar(150),
	ex_video varchar(300)
);

--------TREINOS_EXERCICIOS--------
CREATE TABLE treinos_exercicios (
    tr_ex_id INT REFERENCES treinos(tr_id) ON DELETE CASCADE,
    ex_tr_id INT REFERENCES exercícios(ex_id) ON DELETE CASCADE,
    PRIMARY KEY (tr_ex_id, ex_tr_id)
);


------------------FOREIGN KEY------------------

ALTER TABLE child_table
ADD CONSTRAINT fk_name FOREIGN KEY (foreign_key_column)
REFERENCES parent_table(primary_key_column)
-- Optional: ON DELETE action ON UPDATE action;


-----------------------------------------------


alter table pagamentos add constraint al_pa foreign key (pa_aluno_id) references alunos(al_id);

alter table turmas add constraint mo_tu foreign key (tu_mod_id) references modalidades(mo_id);

alter table turmas add constraint hor_tu foreign key (tu_hor_id) references horarios(hor_id);

ALTER TABLE turmas ADD CONSTRAINT tu_prof_fk FOREIGN KEY (tu_prof_id) REFERENCES funcionarios(fu_id);

ALTER TABLE treinos ADD CONSTRAINT tr_prof_fk FOREIGN KEY (tr_prof_id) REFERENCES funcionarios(fu_id);
---------------INSERT----------------------

---------PRODUTOS-------------
insert into produtos(pd_nome, pd_valor, pd_descricao ) values
('Coqueteleira', 30, 'Coqueteleira preta de 600ml');

---------DESAFIOS-------------
insert into desafios(de_nome, de_descricao, de_pontos, de_desafio, de_progresso, de_start, de_end) values
('Desafio Supino', 'Faça 3 treinos que contenha o exercício', 300, 'Supino', 67, '2025-09-04 10:00:00', '2025-09-05 10:00:00');

---------PAGAMENTOS-----------
insert into pagamentos(pa_valor, pa_metodo, pa_status, pa_data ) values
(99.90, 30, 'C', 'Pendente', '2025-10-26');

---------ALUNOS---------------
insert into alunos(al_nome, al_email, al_senha, al_cpf, al_telefone, al_dtnasc, al_pontos) values
('Felipe', 'felipetester@gmail.com', 'felipetester', '12345678908', '11999999999', '2008-03-30', 500);

---------MODALIDADES----------
insert into modalidades(mo_nome, mo_descricao) values
('Boxing', 'Modalidade de boxing profissional');

---------HORARIOS-------------
insert into horarios(hor_start, hor_end, hor_dia) values
('18:30:00', '19:45:00', 'Segunda');

---------TURMAS---------------///
insert into turmas(nome) values
('Boxing 1');

---------FUNCIONARIOS---------
insert into alunos(fu_nome, fu_email, fu_senha, fu_cpf, fu_telefone, fu_dtnasc, fu_cargo, fu_cref) values
('Anthony', 'anthonyprof@gmail.com', 'anthonyprof', '47283642764', '11900009999', '2007-10-12', 'Professor Orientador', 'CREF 123456-G');	

---------TREINOS--------------
insert into treinos(tr_nome, tr_descricao, tr_repeticoes) values
('Costas Iniciante', 'Treino completo de costas para alunos iniciantes', '2x20');

---------EXERCICIOS-----------
insert into exercicios(ex_nome, ex_instrucao, ex_video) values 
('Puxador Articulado', 'Puxe a barra até o seu peito mantendo a postura e solte lentamente. Repita o processo', 'https://www.youtube.com/watch?v=qQ6jCONbYgE');


---------CTRL + C && CTRL + V ---------
create table produtos(
	pd_id serial primary key,
	pd_nome varchar(120) not null,
	pd_valor int not null,
	pd_descricao varchar(200)
);
create table desafios(
	de_id serial primary key,
	de_nome varchar(80) not null,
	de_descricao varchar(150),
	de_pontos int not null,
	de_desafio varchar(60) not null,
	de_progresso int not null,
	de_start timestamp not null,
	de_end timestamp not null
);
create table pagamentos(
	pa_id serial primary key,
	pa_aluno_id int not null,
	pa_valor decimal(6,2) not null,
	pa_metodo char(1) not null,
	pa_status varchar(20) not null,
	pa_data date not null
);
create table alunos(
	al_id serial primary key,
	al_nome varchar(120) not null,
	al_email varchar(120) not null,
	al_senha varchar(60) not null,
	al_cpf varchar(11) not null,
	al_telefone varchar(11),
	al_dtnasc date not null,
	al_pontos int not null
);
create table modalidades(
	mo_id serial primary key, 
	mo_nome varchar(30) not null,
	mo_descricao varchar(200) 
);
create table horarios(
	hor_id serial primary key, 
	hor_start time not null,
	hor_end time not null,
	hor_dia varchar(7) not null
);
create table turmas(
	tu_id serial primary key, 
	tu_nome varchar(50) not null,
	tu_prof_id int not null, 
	tu_mod_id int not null,
	tu_hor_id int not null
);
CREATE TABLE alunos_turmas (
    al_tu_id INT REFERENCES alunos(al_id) ON DELETE CASCADE,
    tu_al_id INT REFERENCES turmas(tu_id) ON DELETE CASCADE,
    PRIMARY KEY (al_id, tu_id)
);
create table funcionarios(
	fu_id serial primary key, 
	fu_nome varchar(120) not null,
	fu_email varchar(120) not null,
	fu_senha varchar(60) not null,
	fu_cpf varchar(11) not null,
	fu_telefone varchar(11) not null,
	fu_dtnasc date not null,
	fu_cargo varchar(50) not null,
	fu_cref varchar(13)
);	
create table treinos(
	tr_id serial primary key,
	tr_prof_id int not null, 
	tr_nome varchar(80) not null,
	tr_descricao varchar(150),
	tr_repeticoes varchar(4) 
);
create table exercícios(
	ex_id serial primary key,
	ex_nome varchar(80) not null,
	ex_instrucao varchar(150),
	ex_video varchar(300)
);
CREATE TABLE treinos_exercicios (
    tr_ex_id INT REFERENCES treinos(tr_id) ON DELETE CASCADE,
    ex_tr_id INT REFERENCES exercícios(ex_id) ON DELETE CASCADE,
    PRIMARY KEY (ex_tr_id, tr_ex_id)
);


alter table pagamentos add constraint al_pa foreign key (pa_aluno_id) references alunos(al_id);

alter table turmas add constraint mo_tu foreign key (tu_mod_id) references modalidades(mo_id);

alter table turmas add constraint hor_tu foreign key (tu_hor_id) references horarios(hor_id);

alter table funcionarios add constraint fu_tu foreign key (fu_id) references turmas(tu_prof_id);

alter table funcionarios add constraint fu_tr foreign key (fu_id) references treinos(tr_prof_id);


-------------CORRIGIDO DO GPT-----------------

-- Produtos
CREATE TABLE produtos (
    pd_id SERIAL PRIMARY KEY,
    pd_nome VARCHAR(120) NOT NULL,
    pd_valor INT NOT NULL,
    pd_descricao VARCHAR(200)
);

-- Desafios
CREATE TABLE desafios (
    de_id SERIAL PRIMARY KEY,
    de_nome VARCHAR(80) NOT NULL,
    de_descricao VARCHAR(150),
    de_pontos INT NOT NULL,
    de_desafio VARCHAR(60) NOT NULL,
    de_progresso INT NOT NULL,
    de_start TIMESTAMP NOT NULL,
    de_end TIMESTAMP NOT NULL
);

-- Alunos
CREATE TABLE alunos (
    al_id SERIAL PRIMARY KEY,
    al_nome VARCHAR(120) NOT NULL,
    al_email VARCHAR(120) NOT NULL,
    al_senha VARCHAR(60) NOT NULL,
    al_cpf VARCHAR(11) NOT NULL,
    al_telefone VARCHAR(11),
    al_dtnasc DATE NOT NULL,
    al_pontos INT NOT NULL
);

-- Pagamentos
CREATE TABLE pagamentos (
    pa_id SERIAL PRIMARY KEY,
    pa_aluno_id INT NOT NULL,
    pa_valor DECIMAL(6,2) NOT NULL,
    pa_metodo CHAR(1) NOT NULL,
    pa_status VARCHAR(20) NOT NULL,
    pa_data DATE NOT NULL,
    CONSTRAINT fk_pag_aluno FOREIGN KEY (pa_aluno_id) REFERENCES alunos(al_id) ON DELETE CASCADE
);

-- Modalidades
CREATE TABLE modalidades (
    mo_id SERIAL PRIMARY KEY, 
    mo_nome VARCHAR(30) NOT NULL,
    mo_descricao VARCHAR(200) 
);

-- Horários
CREATE TABLE horarios (
    hor_id SERIAL PRIMARY KEY, 
    hor_start TIME NOT NULL,
    hor_end TIME NOT NULL,
    hor_dia VARCHAR(7) NOT NULL
);

-- Funcionários
CREATE TABLE funcionarios (
    fu_id SERIAL PRIMARY KEY, 
    fu_nome VARCHAR(120) NOT NULL,
    fu_email VARCHAR(120) NOT NULL,
    fu_senha VARCHAR(60) NOT NULL,
    fu_cpf VARCHAR(11) NOT NULL,
    fu_telefone VARCHAR(11) NOT NULL,
    fu_dtnasc DATE NOT NULL,
    fu_cargo VARCHAR(50) NOT NULL,
    fu_cref VARCHAR(13)
);

-- Turmas
CREATE TABLE turmas (
    tu_id SERIAL PRIMARY KEY, 
    tu_nome VARCHAR(50) NOT NULL,
    tu_prof_id INT NOT NULL,
    tu_mod_id INT NOT NULL,
    tu_hor_id INT NOT NULL,
    CONSTRAINT fk_tu_prof FOREIGN KEY (tu_prof_id) REFERENCES funcionarios(fu_id) ON DELETE CASCADE,
    CONSTRAINT fk_tu_mod FOREIGN KEY (tu_mod_id) REFERENCES modalidades(mo_id) ON DELETE CASCADE,
    CONSTRAINT fk_tu_hor FOREIGN KEY (tu_hor_id) REFERENCES horarios(hor_id) ON DELETE CASCADE
);

-- Alunos_Turmas (tabela de junção N:N)
CREATE TABLE alunos_turmas (
    al_id INT NOT NULL,
    tu_id INT NOT NULL,
    PRIMARY KEY (al_id, tu_id),
    CONSTRAINT fk_al_tu FOREIGN KEY (al_id) REFERENCES alunos(al_id) ON DELETE CASCADE,
    CONSTRAINT fk_tu_al FOREIGN KEY (tu_id) REFERENCES turmas(tu_id) ON DELETE CASCADE
);

-- Treinos
CREATE TABLE treinos (
    tr_id SERIAL PRIMARY KEY,
    tr_prof_id INT NOT NULL, 
    tr_nome VARCHAR(80) NOT NULL,
    tr_descricao VARCHAR(150),
    tr_repeticoes VARCHAR(4),
    CONSTRAINT fk_tr_prof FOREIGN KEY (tr_prof_id) REFERENCES funcionarios(fu_id) ON DELETE CASCADE
);

-- Exercícios
CREATE TABLE exercicios (
    ex_id SERIAL PRIMARY KEY,
    ex_nome VARCHAR(80) NOT NULL,
    ex_instrucao VARCHAR(150),
    ex_video VARCHAR(300)
);

-- Tabela de junção Treinos_Exercicios (N:N)
CREATE TABLE treinos_exercicios (
    tr_id INT NOT NULL,
    ex_id INT NOT NULL,
    PRIMARY KEY (tr_id, ex_id),
    CONSTRAINT fk_tr_ex FOREIGN KEY (tr_id) REFERENCES treinos(tr_id) ON DELETE CASCADE,
    CONSTRAINT fk_ex_tr FOREIGN KEY (ex_id) REFERENCES exercicios(ex_id) ON DELETE CASCADE
);